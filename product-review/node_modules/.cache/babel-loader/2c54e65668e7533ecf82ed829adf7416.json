{"ast":null,"code":"var _jsxFileName = \"E:\\\\capgemini\\\\react\\\\product-review\\\\src\\\\Components\\\\Register.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Card, Button, Form, Col } from 'react-bootstrap';\nimport user from \"../images/user.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validate(id, username, password, address, phone) {\n  const errors = [];\n\n  if (id.length === 0) {\n    errors.push(\"Id cannot be empty\");\n  }\n\n  if (!Number(id)) {\n    errors.push(\"Id can only be a numeric value\");\n  }\n\n  if (username.length === 0 || username.length < 5) {\n    errors.push(\"Username must be of alteast 5 characters\");\n  }\n\n  if (!(phone.length === 9)) {\n    errors.push(\"Phone number can be of 10 digits only\");\n  }\n\n  if (!Number(phone)) {\n    errors.push(\"Phone number cannot only be a numeric value\");\n  }\n\n  if (address.length === 0) {\n    errors.push(\"Address cannot be empty\");\n  }\n\n  if (password.length < 8 || password.length > 15) {\n    errors.push(\"password length should be between 8 and 15 characters\");\n  }\n\n  return errors;\n}\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.registerHandler = event => {\n      event.preventDefault();\n      const {\n        id,\n        username,\n        password,\n        phone,\n        address\n      } = this.state;\n      const errors = validate(id, username, password, address, phone);\n\n      if (errors.length > 0) {\n        alert(errors[0]);\n      }\n\n      if (errors.length === 0) {\n        axios.post('http://localhost:8086/Application/Customer/signup', {\n          customerID: parseInt(this.state.id),\n          custUsername: this.state.username,\n          custPassword: this.state.password,\n          custAddress: this.state.address,\n          custPhone: parseInt(this.state.phone)\n        }).then(res => {\n          console.log(res.custID);\n          alert('Registered');\n        });\n        this.props.history.push('/login');\n      } else {\n        this.setState({\n          errors\n        });\n        console.log(this.state);\n        return;\n      }\n    };\n\n    this.state = {\n      id: \"\",\n      username: \"\",\n      password: \"\",\n      address: \"\",\n      phone: \"\",\n      errors: []\n    };\n    this.idChangeHandler = this.idChangeHandler.bind(this);\n    this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n    this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n    this.addressChangeHandler = this.addressChangeHandler.bind(this);\n    this.phoneChangeHandler = this.phoneChangeHandler.bind(this);\n    this.registerHandler = this.registerHandler.bind(this);\n  }\n\n  idChangeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  usernameChangeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  passwordChangeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  addressChangeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  phoneChangeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border border-light bg-light text-dark\",\n        style: {\n          width: '50%',\n          margin: '5% auto',\n          backgroundImage: 'linear-gradient(rgba(119,136,153,0.3),rgba(105,105,105,1))'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.registerHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                style: {\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: user,\n                  alt: \"user\",\n                  style: {\n                    height: '50px',\n                    width: '50px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  type: \"text\",\n                  className: \"bg-light text-dark\",\n                  name: \"id\",\n                  value: this.state.id,\n                  onChange: this.idChangeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 33\n                }, this), ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  type: \"text\",\n                  className: \"bg-light text-dark\",\n                  name: \"username\",\n                  value: this.state.username,\n                  onChange: this.usernameChangeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  type: \"password\",\n                  className: \"bg-light text-dark\",\n                  name: \"password\",\n                  value: this.state.password,\n                  onChange: this.passwordChangeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Phone Number: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  type: \"text\",\n                  className: \"bg-light text-dark\",\n                  name: \"phone\",\n                  value: this.state.phone,\n                  onChange: this.phoneChangeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Address: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  type: \"text\",\n                  className: \"bg-light text-dark\",\n                  name: \"address\",\n                  value: this.state.address,\n                  onChange: this.addressChangeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                style: {\n                  textAlign: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"dark\",\n                  type: \"submit\",\n                  value: \"submit\",\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 25\n                }, this), ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["E:/capgemini/react/product-review/src/Components/Register.js"],"names":["axios","React","Component","Card","Button","Form","Col","user","validate","id","username","password","address","phone","errors","length","push","Number","Register","constructor","props","registerHandler","event","preventDefault","state","alert","post","customerID","parseInt","custUsername","custPassword","custAddress","custPhone","then","res","console","log","custID","history","setState","idChangeHandler","bind","usernameChangeHandler","passwordChangeHandler","addressChangeHandler","phoneChangeHandler","target","name","value","render","width","margin","backgroundImage","textAlign","height"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, {Component} from 'react'\r\nimport {Card, Button, Form ,Col} from 'react-bootstrap'\r\nimport user from \"../images/user.png\"\r\n\r\nfunction validate(id,username,password,address,phone){\r\n    const errors = [];\r\n    \r\n    if(id.length === 0){\r\n        errors.push(\"Id cannot be empty\");\r\n    }\r\n\r\n    if(!Number(id)){\r\n        errors.push(\"Id can only be a numeric value\");\r\n    }\r\n\r\n    if(username.length === 0 || username.length <5){\r\n        errors.push(\"Username must be of alteast 5 characters\");\r\n    }\r\n\r\n    if(!(phone.length === 9)){\r\n        errors.push(\"Phone number can be of 10 digits only\");\r\n    }\r\n\r\n    if(!Number(phone)){\r\n        errors.push(\"Phone number cannot only be a numeric value\");\r\n    }\r\n\r\n    if(address.length === 0){\r\n        errors.push(\"Address cannot be empty\");\r\n    }\r\n\r\n    if(password.length<8 || password.length>15){\r\n        errors.push(\"password length should be between 8 and 15 characters\");\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nclass Register extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            id:\"\",\r\n            username:\"\",\r\n            password:\"\",\r\n            address: \"\",\r\n            phone: \"\",\r\n            errors:[]\r\n        }\r\n\r\n        this.idChangeHandler = this.idChangeHandler.bind(this);\r\n        this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\r\n        this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\r\n        this.addressChangeHandler = this.addressChangeHandler.bind(this);\r\n        this.phoneChangeHandler = this.phoneChangeHandler.bind(this);\r\n        this.registerHandler = this.registerHandler.bind(this);\r\n    }\r\n\r\n    idChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    usernameChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    passwordChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    addressChangeHandler(event){\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    phoneChangeHandler(event){\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    registerHandler =(event) =>{\r\n        event.preventDefault();\r\n\r\n        const{id,username,password,phone,address} = this.state;\r\n\r\n        const errors = validate(id,username,password,address,phone);\r\n        if(errors.length > 0){\r\n            alert(errors[0])\r\n        }\r\n\r\n        if(errors.length === 0){\r\n            axios.post('http://localhost:8086/Application/Customer/signup',{\r\n            customerID: parseInt(this.state.id),\r\n            custUsername: this.state.username,\r\n            custPassword: this.state.password,\r\n            custAddress: this.state.address,\r\n            custPhone: parseInt(this.state.phone)\r\n        })\r\n        .then(res => {\r\n            console.log(res.custID)\r\n            alert('Registered')\r\n        })\r\n\r\n        this.props.history.push('/login');\r\n        }\r\n\r\n        else{\r\n            this.setState({errors})\r\n            console.log(this.state);\r\n            return;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n                  <div>\r\n               \r\n                <Card className={\"border border-light bg-light text-dark\"} style={{width: '50%', margin: '5% auto', backgroundImage: 'linear-gradient(rgba(119,136,153,0.3),rgba(105,105,105,1))'}}>\r\n                    \r\n                    <Card.Body>\r\n                        <Form onSubmit={this.registerHandler}>\r\n                        <Form.Row>\r\n                        <Form.Group as={Col} style={{textAlign:'center'}}>\r\n                        <img src={user} alt=\"user\" style={{height:'50px', width:'50px'}}/>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                <Form.Label>ID</Form.Label>\r\n                                <Form.Control required type=\"text\" className={\"bg-light text-dark\"}  name=\"id\" value={this.state.id} onChange={this.idChangeHandler}/>{' '}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col}>\r\n                                <Form.Label>Username:</Form.Label>\r\n                                <Form.Control  required type=\"text\" className={\"bg-light text-dark\"}  name=\"username\" value={this.state.username} onChange={this.usernameChangeHandler}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                            <Form.Group as={Col}>\r\n\r\n                                <Form.Label>Password:</Form.Label>\r\n                                <Form.Control required type=\"password\" className={\"bg-light text-dark\"}  name=\"password\" value={this.state.password} onChange={this.passwordChangeHandler}/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col}>\r\n                            <Form.Label>Phone Number: </Form.Label>\r\n                                <Form.Control required type=\"text\" className={\"bg-light text-dark\"} name=\"phone\" value={this.state.phone} onChange={this.phoneChangeHandler} />\r\n                                \r\n                            </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                <Form.Label>Address: </Form.Label>\r\n                                <Form.Control required type=\"text\" className={\"bg-light text-dark\"}  name=\"address\" value={this.state.address} onChange={this.addressChangeHandler}/>\r\n                                </Form.Group>\r\n                            \r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n\r\n                        <Form.Group as={Col} style={{textAlign:'center'}}>\r\n                        <Button  variant=\"dark\" type=\"submit\" value=\"submit\">Sign Up</Button>{' '}\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                                \r\n                            \r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}