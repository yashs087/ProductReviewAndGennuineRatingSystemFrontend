{"ast":null,"code":"var _jsxFileName = \"E:\\\\capgemini\\\\react\\\\product-review\\\\src\\\\Components\\\\PostReview.js\";\nimport React from 'react';\nimport { Card, Form, Button, Col } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validate(customerID, productRating, productReview) {\n  const errors = [];\n\n  if (!Number(customerID)) {\n    errors.push(\"Customer ID must be mumeric\");\n  }\n\n  if (productRating < 1 || productRating > 5) {\n    errors.push(\"Rating must be between 1 and 5\");\n  }\n\n  if (!Number(productRating)) {\n    errors.push(\"Rating can only be a numeric value\");\n  }\n\n  if (productReview.length === 0) {\n    errors.push(\"Feedback / comment cannot be empty\");\n  }\n\n  return errors;\n}\n\nclass PostReview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearField = () => {\n      this.setState({\n        customerID: '',\n        productName: '',\n        reviewID: '',\n        productRating: '',\n        productReview: ''\n      });\n    };\n\n    this.state = {\n      customerID: '',\n      productName: this.props.productname,\n      reviewID: '',\n      productRating: '',\n      productReview: '',\n      errors: []\n    };\n    this.productChange = this.productChange.bind(this);\n    this.submitProduct = this.submitProduct.bind(this);\n    this.clearField = this.clearField.bind(this);\n  }\n\n  submitProduct(e) {\n    e.preventDefault();\n    const {\n      customerID,\n      productRating,\n      productReview\n    } = this.state;\n    const errors = validate(customerID, productRating, productReview);\n\n    if (errors.length > 0) {\n      alert(errors[0]);\n    }\n\n    if (errors.length === 0) {\n      Axios.post('http://localhost:8086/ProductReview/Customer/product/review/' + this.state.productName + '/HTSHS534/' + this.state.customerID, {\n        productRating: parseInt(this.state.productRating),\n        productReview: this.state.productReview\n      }).then(res => {\n        console.log(res.productID);\n        alert('Review Added');\n      });\n      window.location.reload();\n    } else {\n      this.setState({\n        errors\n      });\n      console.log(this.state);\n      return;\n    }\n  }\n\n  productChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border border-light bg-light text-dark\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.submitProduct,\n            controlId: \"addForm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGroupCategory\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Customer ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  type: \"text\",\n                  className: \"bg-light text-dark\",\n                  placeholder: \"Enter Customer ID\",\n                  name: \"customerID\",\n                  value: this.state.customerID,\n                  onChange: this.productChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGroupPrice\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Product Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  type: \"text\",\n                  className: \"bg-light text-dark\",\n                  placeholder: \"Enter Product Rating between (1-5)\",\n                  name: \"productRating\",\n                  value: this.state.productRating,\n                  onChange: this.productChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Feedback / Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                as: \"textarea\",\n                rows: 5,\n                className: \"bg-light text-dark\",\n                placeholder: \"Enter feedback / comment\",\n                name: \"productReview\",\n                value: this.state.productReview,\n                onChange: this.productChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          style: {\n            \"textAlign\": \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            variant: \"success\",\n            type: \"submit\",\n            title: \"button1\",\n            onClick: this.submitProduct,\n            children: \"Post Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            controlId: \"button\",\n            size: \"sm\",\n            variant: \"primary\",\n            type: \"reset\",\n            onClick: this.clearField,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PostReview;","map":{"version":3,"sources":["E:/capgemini/react/product-review/src/Components/PostReview.js"],"names":["React","Card","Form","Button","Col","Axios","validate","customerID","productRating","productReview","errors","Number","push","length","PostReview","Component","constructor","props","clearField","setState","productName","reviewID","state","productname","productChange","bind","submitProduct","e","preventDefault","alert","post","parseInt","then","res","console","log","productID","window","location","reload","event","target","name","value","render","height"],"mappings":"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","sourcesContent":["import React from 'react' \nimport {Card, Form, Button, Col} from 'react-bootstrap'\nimport Axios from 'axios'\n\nfunction validate(customerID,productRating,productReview){\n    const errors = [];\n\n    if(!Number(customerID)){\n        errors.push(\"Customer ID must be mumeric\");\n    }\n\n    if(productRating<1 || productRating>5){\n        errors.push(\"Rating must be between 1 and 5\");\n    }\n\n    if(!Number(productRating)){\n        errors.push(\"Rating can only be a numeric value\");\n    }\n\n    if(productReview.length === 0){\n        errors.push(\"Feedback / comment cannot be empty\");\n    }\n    return errors;\n}\n\n\nclass PostReview extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            customerID: '',\n            productName: this.props.productname,\n            reviewID: '',\n            productRating: '',\n            productReview: '',\n            errors:[]\n        }\n\n        this.productChange = this.productChange.bind(this);\n        this.submitProduct = this.submitProduct.bind(this);\n        this.clearField = this.clearField.bind(this);\n    }\n\n    submitProduct(e) {\n        e.preventDefault();\n\n        const{customerID,productRating,productReview} = this.state;\n\n        const errors = validate(customerID,productRating,productReview);\n\n        if(errors.length > 0){\n            alert(errors[0])\n        }\n\n        if(errors.length === 0){\n            Axios.post('http://localhost:8086/ProductReview/Customer/product/review/'+this.state.productName+'/HTSHS534/'+this.state.customerID,{\n            \n            productRating: parseInt(this.state.productRating),\n            productReview: this.state.productReview\n        })\n        .then(res => {\n            console.log(res.productID)\n            alert('Review Added')\n        })\n        window.location.reload();\n        }\n        \n        else{\n            this.setState({errors})\n            console.log(this.state);\n            return;\n        }\n        \n    }\n\n    productChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    clearField = () => {\n        this.setState({\n            customerID: '',\n            productName: '',\n            reviewID: '',\n            productRating: '',\n            productReview: ''\n        })\n    }\n\n    render() {\n        return(\n            <div style={{height: \"100%\"}}>\n                \n                <Card className={\"border border-light bg-light text-dark\"}>\n                    \n                    <Card.Body>\n                        <Form onSubmit={this.submitProduct} controlId=\"addForm\">\n                            \n                            <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGroupCategory\">\n                                <Form.Label>Customer ID</Form.Label>\n                                <Form.Control required type=\"text\" className={\"bg-light text-dark\"} placeholder=\"Enter Customer ID\" name=\"customerID\" value={this.state.customerID} onChange={this.productChange}/>\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"formGroupPrice\">\n                                <Form.Label>Product Rating</Form.Label>\n                                <Form.Control required type=\"text\" className={\"bg-light text-dark\"} placeholder=\"Enter Product Rating between (1-5)\" name=\"productRating\" value={this.state.productRating} onChange={this.productChange}/>\n                            </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                    <Form.Label>Feedback / Comment</Form.Label>\n                                    <Form.Control required as=\"textarea\" rows={5} className={\"bg-light text-dark\"} placeholder=\"Enter feedback / comment\" name=\"productReview\" value={this.state.productReview} onChange={this.productChange}></Form.Control>\n                            </Form.Row>\n                        </Form>\n                    </Card.Body>\n                    <Card.Footer style={{\"textAlign\":\"right\"}}>\n                        <Button size=\"sm\" variant=\"success\" type=\"submit\" title=\"button1\" onClick={this.submitProduct}>Post Review</Button>{' '}\n                        <Button controlId=\"button\" size=\"sm\" variant=\"primary\" type=\"reset\" onClick={this.clearField}>Reset</Button>\n                    </Card.Footer>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default PostReview;"]},"metadata":{},"sourceType":"module"}